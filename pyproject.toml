[tool.poetry]
name = "minato"
version = "0.12.2"
description = "A Unified File I/O Library for Python"
authors = ["Yasuhiro Yamaguchi <altescy@fastmail.com>"]
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/altescy/minato"
keywords=["python", "cache", "s3", "google-cloud-storage"]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
boto3 = { version = ">=1.9.201,<2.0", optional = true }
google-cloud-storage = { version = ">=2.4,<3.0", optional = true }
huggingface-hub = {version = ">=0.8.1,<0.17.0", optional = true}

[tool.poetry.dev-dependencies]
python-language-server = "^0.36.2"
pytest = "^7.3.1"
pysen = "^0.10.4"
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^5.0.4"
mypy = "^1.2.0"
moto = {version = "^4.1.8", extras = ["s3"]}
boto3-stubs = {version = "^1.19.12", extras = ["s3"]}

[tool.poetry.extras]
s3=["boto3"]
gcs=["google-cloud-storage"]
huggingface=["huggingface-hub"]
all=["boto3", "google-cloud-storage", "huggingface-hub"]

[tool.poetry.scripts]
minato = "minato.__main__:run"

[tool.pysen]
version = "0.10"

[tool.pysen-cli]
settings_dir = "."

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 120
py_version = "py38"
[[tool.pysen.lint.mypy_targets]]
  paths = ["."]

[tool.pysen.lint.source]
  includes = ["."]
  excludes = [".venv/"]

[tool.black] # automatically generated by pysen
# pysen ignores and overwrites any modifications
line-length = 120
target-version = ["py38"]

[tool.isort] # automatically generated by pysen
# pysen ignores and overwrites any modifications
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
line_length = 120
multi_line_output = 3
use_parentheses = true

[tool.pytest.ini_options]
testpaths = ["tests/"]
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
markers = ["java"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
